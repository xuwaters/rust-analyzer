searchState.loadedDescShard("line_index", 0, "See <code>LineIndex</code>.\n<code>(line, column)</code> information in the native, UTF-8 encoding.\nMaps flat <code>TextSize</code> offsets to/from <code>(line, column)</code> …\nA range in text, represented as a pair of <code>TextSize</code>.\nA measure of text length. Also, equivalently, an index …\nUTF-16.\nUTF-32.\nA kind of wide character encoding.\n<code>(line, column)</code> information in wide encodings.\nCreate a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…\nAdd an offset to this range.\nChecked addition. Returns <code>None</code> if overflow occurred.\nSubtract an offset from this range.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nZero-based UTF-8 offset.\nZero-based.\nCheck if this range contains an offset.\nCheck if this range contains an offset.\nCheck if this range completely contains another range.\nExtends the range to cover <code>other</code> as well.\nExtends the range to cover <code>other</code> offsets as well.\nCreate a zero-length range at the specified offset (…\nThe end point of this range.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe range covered by both ranges, if it exists. If the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if this range is empty.\nReturns the length of the original text.\nThe size of this range.\nReturns the given line’s range.\nZero-based.\nZero-based.\nTransforms the <code>TextSize</code> into a <code>LineCol</code>.\nGiven a range [start, end), returns a sorted iterator of …\nReturns the number of code units it takes to encode <code>text</code> …\nReturns a <code>LineIndex</code> for the <code>text</code>.\nCreates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…\nCreates a new instance of <code>TextSize</code> from a raw <code>u32</code>.\nThe text size of some primitive text-like object.\nTransforms the <code>LineCol</code> into a <code>TextSize</code>.\nRelative order of the two ranges (overlapping ranges are …\nThe start point of this range.\nTransforms the <code>WideLineCol</code> with the given <code>WideEncoding</code> …\nTransforms the <code>LineCol</code> with the given <code>WideEncoding</code> into a …\nTransforms the <code>TextSize</code> into a <code>LineCol</code>.\nCreate a range up to the given end (<code>..end</code>).")