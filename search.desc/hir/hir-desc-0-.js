searchState.loadedDescShard("hir", 0, "HIR (previously known as descriptors) provides a …\nAbsolute path (::foo)\nThe <code>add</code> lang item.\nThe <code>add_assign</code> lang item.\nA Data Type\nA Data Type\nThe <code>align_offset</code> lang item. Align offset for stride != 1; …\nThe <code>alloc_layout</code> lang item.\nGo from <code>*const [T; N]</code> to <code>*const T</code>\nInvariant: <code>inner.as_assoc_item(db).is_some()</code> We do not …\nA procedural attribute macro.\nA template that the attribute input must match. Only …\nDesugared attributes of an item post <code>cfg_attr</code> expansion.\nThe <code>begin_panic</code> lang item. libstd panic entry point. …\nThe <code>bitand</code> lang item.\nThe <code>bitand_assign</code> lang item.\nThe <code>bitor</code> lang item.\nThe <code>bitor_assign</code> lang item.\nThe <code>bitxor</code> lang item.\nThe <code>bitxor_assign</code> lang item.\nTake the address and produce either a <code>&amp;</code> or <code>*</code> pointer.\nThe <code>box_free</code> lang item.\nA built-in function-like macro.\nCauses paths to start with <code>crate</code> where applicable, …\nCauses paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…\nThe <code>CStr</code> lang item.\nThe <code>c_void</code> lang item.\nA simple configuration value passed in from the outside.\nConfiguration options used for conditional compilation on …\nThe <code>clone</code> lang item.\nGo from a non-capturing closure to an fn pointer or an …\n<code>{closure#14825}</code>, useful for some diagnostics (like type …\n<code>{closure#14825}&lt;i32, ()&gt;</code>, useful for internal usage.\nThe <code>coerce_unsized</code> lang item.\n?\nThe <code>const_panic_fmt</code> lang item.\nA const parameter\nThe <code>const_param_ty</code> lang item.\nThe <code>Context</code> lang item.\nThe <code>Break</code> lang item.\nThe <code>Continue</code> lang item.\nThe <code>copy</code> lang item.\nThe <code>coroutine</code> lang item.\nThe <code>coroutine_state</code> lang item.\nhir::Crate describes a single crate. It’s the main …\n<code>macro_rules!</code> or Macros 2.0 macro.\nAn item\nContains the results of (early) name resolution.\nThe defs which have a body.\nDereference once, producing a place.\nThe <code>deref</code> lang item.\nThe <code>deref_mut</code> lang item.\nThe <code>deref_target</code> lang item.\nA built-in or custom derive.\nThe <code>destruct</code> lang item.\nThe <code>discriminant_type</code> lang item. The associated item of …\nThe <code>discriminant_kind</code> lang item.\nThe <code>dispatch_from_dyn</code> lang item.\nErrors that can occur when generating source code\nThe <code>div</code> lang item.\nThe <code>div_assign</code> lang item.\nSubset of <code>ide_db::Definition</code> that doc links can resolve to.\n<code>$crate</code> from macro expansion\nThe <code>drop</code> lang item.\nThe <code>drop_in_place</code> lang item.\nThe <code>dyn_metadata</code> lang item.\nThe <code>eh_catch_typeinfo</code> lang item.\nThe <code>eh_personality</code> lang item.\nThe <code>exchange_malloc</code> lang item.\nInvariant: <code>inner.as_extern_assoc_item(db).is_some()</code> We do …\neg. <code>#[cfg(test)]</code>\n<code>FmtError</code> is required to be compatible with …\nThe <code>fn_</code> lang item.\nA fn pointer. Last element of the vector is the return …\nThe <code>fn_mut</code> lang item.\nThe <code>fn_once</code> lang item.\nThe <code>fn_once_output</code> lang item.\nThe <code>fn_ptr_addr</code> lang item.\nThe <code>fn_ptr_trait</code> lang item.\nThe <code>format_alignment</code> lang item.\nThe <code>format_argument</code> lang item.\nThe <code>format_arguments</code> lang item.\nThe <code>format_count</code> lang item.\nThe <code>format_placeholder</code> lang item.\nThe <code>format_unsafe_arg</code> lang item.\nThe <code>freeze</code> lang item.\nThe <code>future_trait</code> lang item.\nThe <code>future_output</code> lang item.\nThe <code>poll</code> lang item.\nThe <code>get_context</code> lang item.\nTrait for obtaining the defining crate of an item.\n<code>…</code>, which is the <code>TYPE_HINT_TRUNCATION</code>\nInput to the analyzer is a set of files, where each file …\n<code>impl FnX(i32, i32) -&gt; i32</code>, where <code>FnX</code> is the most special …\nSomething that should never happen and is definitely a …\nA wrapper around three booleans\n<code>InFile&lt;T&gt;</code> stores a value of <code>T</code> inside a particular …\nThe <code>index</code> lang item.\nThe <code>index_mut</code> lang item.\nThese should not occur, usually indicates a bug in mir …\nThe <code>into_future</code> lang item.\nThe <code>into_iter</code> lang item.\nFIXME: Fold this into InternalError\nThe <code>iterator</code> lang item.\nThe <code>next</code> lang item.\neg. <code>#[cfg(target_os = &quot;linux&quot;)]</code>\nA representation of all the valid language items in Rust.\nA single local definition.\nA local binding (only value namespace)\nA macro\nThe <code>manually_drop</code> lang item.\nThe <code>maybe_uninit</code> lang item.\nThe <code>metadata_type</code> lang item.\nVisibility is restricted to a certain module.\nThe defs which can be visible in the module.\nThe defs which can be visible in the module.\nThe <code>mul</code> lang item.\nThe <code>mul_assign</code> lang item.\nGo from a mut raw pointer to a const raw pointer.\n<code>Name</code> is a wrapper around string, which is used in hir for …\nThe <code>neg</code> lang item.\nGo from ! to any type.\nThe <code>not</code> lang item.\nThe <code>Option</code> lang item.\nThe <code>None</code> lang item.\nThe <code>Some</code> lang item.\nThe <code>owned_box</code> lang item.\nThe <code>panic</code> lang item.\nThe <code>panic_bounds_check</code> lang item.\nThe <code>panic_cannot_unwind</code> lang item.\nThe <code>panic_display</code> lang item.\nThe <code>panic_fmt</code> lang item.\nThe <code>panic_impl</code> lang item.\nThe <code>panic_info</code> lang item.\nThe <code>panic_location</code> lang item.\nThe <code>panic_misaligned_pointer_dereference</code> lang item.\nThe <code>panic_nounwind</code> lang item.\nThe <code>eq</code> lang item.\nThe <code>partial_ord</code> lang item.\nThe <code>phantom_data</code> lang item.\nThe <code>pin</code> lang item.\nThe <code>new_unchecked</code> lang item.\nCauses paths to not use a self, super or crate prefix.\nThe <code>pointee_trait</code> lang item.\nThe <code>pointer_like</code> lang item.\nThe <code>Poll</code> lang item.\nThe <code>Pending</code> lang item.\nThe <code>Ready</code> lang item.\nA function-like procedural macro.\nVisibility is unrestricted.\n<code>|i32, i32| -&gt; i32</code>\nThe module id of a crate or block root.\nThe <code>Range</code> lang item.\nThe <code>RangeFrom</code> lang item.\nThe <code>RangeFull</code> lang item.\nThe <code>range_inclusive_new</code> lang item.\nThe <code>RangeInclusive</code> lang item.\nThe <code>RangeTo</code> lang item.\nThe <code>RangeToInclusive</code> lang item.\nConverts from T to *T.\nThe <code>receiver</code> lang item.\nConverts from T to &amp;T.\nGo from a fn-item type to a fn-pointer type.\nThe <code>rem</code> lang item.\nThe <code>rem_assign</code> lang item.\nThe <code>Err</code> lang item.\nThe <code>Ok</code> lang item.\nThe <code>ResumeTy</code> lang item.\nSafe\nWhether a function is safe or not.\nFor IDE only\nPrimary API to get semantic information, like types, from …\n<code>SemanticsScope</code> encapsulates the notion of a scope (the set …\nThe <code>shl</code> lang item.\nThe <code>shl_assign</code> lang item.\nThe <code>shr</code> lang item.\nThe <code>shr_assign</code> lang item.\nThe <code>sized</code> lang item.\nThe <code>slice_len_fn</code> lang item.\nThe <code>start</code> lang item.\nThe <code>String</code> lang item.\nThe <code>structural_peq</code> lang item. Trait injected by …\nThe <code>structural_teq</code> lang item. Trait injected by …\nThe <code>sub</code> lang item.\nThe <code>sub_assign</code> lang item.\n<code>self::</code> is <code>Super(0)</code>\nThe <code>sync</code> lang item.\nThe <code>termination</code> lang item.\nTrying to lower a trait function, instead of an …\nThe <code>transmute_opts</code> lang item.\nThe <code>transmute_trait</code> lang item.\nThe <code>Try</code> lang item.\nThe <code>branch</code> lang item.\nThe <code>from_output</code> lang item.\nThe <code>from_residual</code> lang item.\nThe <code>from_yeet</code> lang item.\nThe <code>tuple_trait</code> lang item.\nThis is used as a key for indexing impls.\nThis should never happen. Type mismatch should catch …\nA type parameter\nCompare ty::Ty\nMeans that code had undefined behavior. We don’t try to …\nThe <code>unpin</code> lang item.\nUnsafe\nThe <code>unsafe_cell</code> lang item.\nGo from a safe fn pointer to an unsafe fn pointer.\nUnsize a pointer/reference value, e.g., <code>&amp;[T; n]</code> to <code>&amp;[T]</code>. …\nThe <code>unsize</code> lang item.\nThe <code>va_list</code> lang item.\nVisibility of an item, with the path resolved.\nThe adjusted type, or the original in case no adjustments …\nThe adjusted type, if an adjustment happened.\nReturns the name under which this crate is made …\nIterates the ancestors of the given node, climbing up …\nIf a type can be represented as <code>dyn Trait</code>, returns all …\nRetrieves all the formatting parts of the format_args! (or …\nIf this path is a single identifier, like <code>foo</code>, return its …\nReturns the text this name represents if it isn’t a …\nReturns the tuple index this name represents if it is a …\nIterates over associated types that may be specified after …\nReturns types that this type dereferences to (including …\nReturns the type this def’s body has to evaluate to.\nIf this is a macro call, returns the syntax node of the …\nRetrieves the formatting part of the format_args! template …\nIterates over all child modules.\nReturns the module containing <code>local_mod</code>, either the parent …\nCheck if type unifies with another type.\nCheck if type unifies with another type eagerly making …\nTopmost parent of this module. Every module has a …\nRe-exports various subcrates databases so that the calling …\nA textual representation of the HIR of this def’s body …\nA textual representation of the MIR of this def’s body …\nReturns a node which declares this module, either a …\nReturns a text range which declares this module, either a …\nReturns a node which defines this module. That is, a file …\nReturns a node which defines this module. That is, a file …\nDescends the token into expansions, returning the tokens …\nDescends the token into expansions, returning the first …\nMaps a node down by mapping its first and last token down.\nRe-export diagnostics such that clients of <code>hir</code> don’t …\nFills <code>acc</code> with the module’s diagnostics.\nGet a reference to the def map’s diagnostics.\nReturns a <code>Display</code>able type that is human-readable. Use …\nReturns a <code>Display</code>able type that is human-readable and …\nReturns a String representation of <code>self</code> that can be …\nReturns a String representation of <code>self</code> for test purposes\nReturns a <code>Display</code>able type that is human-readable and …\nReturns a String representation of <code>self</code> that shows the …\nEvaluate the constant and return the result as a string.\nExpands the macro if it isn’t one of the built-in ones …\nIf <code>item</code> has an attribute macro attached to it, expands it.\nReturn expansion information if it is a macro-expansion …\nIs this a function with an <code>export_name</code> of <code>main</code>?\nFind an AstNode by offset inside SyntaxNode, if it is …\nFind an AstNode by offset inside SyntaxNode, if it is …\nFind an AstNode by offset inside SyntaxNode, if it is …\nFinds a path that can be used to refer to the given item …\nFinds a path that can be used to refer to the given item …\nFold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …\nFetch the <code>CustomProcMacroExpander</code>s and their corresponding …\nCreates a TyFingerprint for looking up an inherent impl. …\nCreates a TyFingerprint for looking up a trait impl.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.\nCreates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …\nOpposite of <code>LangItem::name</code>\nOpposite of <code>LangItem::name</code>\nThis does <strong>not</strong> resolve <code>IntoFuture</code>, only <code>Future</code>.\nGenerates a new name that attempts to be unique. Should …\nCombines lifetime indicators, type and constant parameters …\nReturns unique <code>GenericParam</code>s contained in this type.\nTry to get the root URL of the documentation of a crate.\nReturns <code>idx</code>-th argument of this trait reference if it is a …\nWhether this function declaration has a definition.\nReturns whether this place has any field (aka. non-deref) …\nChecks that particular type <code>ty</code> implements <code>std::ops::FnOnce</code>.\nChecks that particular type <code>ty</code> implements …\nA map of all publicly exported items in a crate.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>Display</code>able type that is human-readable.\nReturn whether this file is an attr macro\nDoes this function have <code>#[bench]</code> attribute?\nReturns true if at least one variant of this enum is a …\nReturn whether this file is the pseudo expansion of the …\nDoes this function have the ignore attribute?\nIs this type parameter implicitly introduced (eg. <code>Self</code> in …\nReturn whether this file is an include macro\nReturns <code>true</code> if the <code>node</code> is inside an <code>unsafe</code> context.\nis this a <code>fn main</code> or a function with an <code>export_name</code> of <code>main</code>…\nReturns true if this is a fake name for things missing in …\nReturns <code>true</code> if the mutability is <code>Mut</code>.\nReturns <code>true</code> if the mutability is <code>Shared</code>.\nDoes this function have <code>#[test]</code> attribute?\nIs this function marked as unstable with <code>#[feature]</code> …\nThis does <strong>not</strong> resolve <code>IntoIterator</code>, only <code>Iterator</code>.\nReturns the crate this module is part of.\nReturns the crate defining this item (or <code>None</code> if <code>self</code> is …\nReturns the number of segments in the path (counting …\nReturns the lifetime of the DataType\nDoes a syntactic traversal to check whether this token …\nMIR definitions and implementation\nA fake name for things missing in the source code.\nReturns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is …\nReturns the <code>SyntaxNode</code> of the module. If this is a file …\nThe modules and their data declared in this crate.\nName of this module.\nFinds nearest non-block ancestor <code>Module</code> (<code>self</code> included).\nThe original type of the expression or pattern.\nAttempts to map the node out of macro expanded files. This …\nIf this is a macro call, returns the syntax node of the …\nReturns the original file of this macro call hierarchy.\nFalls back to the macro call range if the node cannot be …\nAttempts to map the syntax node back up its macro calls.\nAttempts to map the syntax node back up its macro calls.\nFalls back to the macro call range if the node cannot be …\nFalls back to the macro call range if the node cannot be …\nReturns the original file of this macro call hierarchy …\nAttempts to map the node out of macro expanded files …\nAttempts to map the node out of macro expanded files …\nAttempts to map the node out of macro expanded files. This …\nFinds a parent module.\nIf this <code>DefMap</code> is for a block expression, returns the …\nParses this attribute as a token tree consisting of comma …\nConverts the place to a name that can be inserted into …\nIf true, prefer abs path (starting with <code>::</code>) where it is …\nIf true, prefer to unconditionally use imports of the <code>core</code> …\nIf true, prefer import paths containing a prelude module.\nInserts whitespace and replaces <code>$crate</code> in macro expansions.\nThe leftmost definition for this local. Example: …\nCalls the passed closure <code>f</code> on all names in scope.\nEvaluate the constant and return the result as a string, …\nResolves the item <code>link</code> points to in the scope of <code>def</code>.\nAttempts to resolve this call expression as a method call …\nGet this function’s return type\nThis is the same as <code>Self::crate_root</code> for crate def maps, …\nReturns a <code>ModuleScope</code>: a set of items, visible in this …\n#[path(ident)]\nFetches the definition’s source node. Using […\nSearch for a definition’s source and cache its syntax …\nMaps the lowered <code>Attr</code> back to its original syntax node.\nAll definitions for this local. Example: …\nExpand the macro call with a different token tree, mapping …\nExpand the macro call with a different item as the input, …\nResolve a path as-if it was written at the given scope. …\n#[path = “string”]\n#[path = “string”]\nModule defining all known symbols required by the rest of …\nFile symbol extraction.\nTerm search\n#[path TokenTree]\nFIXME: this only lists trait bounds from the item defining …\nReturns the type as in the signature of the struct (i.e., …\nTurns this ADT into a type. Any type parameters of the ADT …\nTurns this ADT into a type with the given type parameters. …\nIterates its type and const arguments\nIterates its type arguments\nIt also includes the changes that binding mode makes in …\nThe type of the enum variant bodies.\nNote: <code>VisibleTraits</code> should be treated as an opaque type, …\nVisits every type, including generic arguments, in this …\nRepresentative struct for the query group.\nRepresentative struct for the query group.\nRepresentative struct for the query group.\nRepresentative struct for the query group.\nComputes the block-level <code>DefMap</code>.\nFetches (and compiles) the expander of this decl macro.\nWhether to expand procedural macros during name resolution.\nSpecial case of the previous query for procedural macros. …\nComputes an <code>ItemTree</code> for the given file or macro expansion.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nGet access to extra methods pertaining to this query. You …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nCollects all crates in the dependency graph that have …\nMacro ids. That’s probably the tricksiest bit in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLowers syntactic macro call to a token tree …\nTurns a MacroId into a MacroDefId, describing the macro’…\nFetches the expander for this macro.\nImplementation for the macro case.\nFirewall query that returns the errors from the …\nMain public API – parses a hir file, not caring whether …\nRetrieves the span to be used for a proc-macro expansions …\nThe proc macros.\nSet the value of the <code>expand_proc_attr_macros</code> input.\nSet the value of the <code>expand_proc_attr_macros</code> input with a …\nSet the value of the <code>proc_macros</code> input.\nSet the value of the <code>proc_macros</code> input with a specific …\nReturns the type of the value of the given constant, or …\n<code>some_var</code>\n<code>SomeStruct</code>\n<code>SOME_CONST</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis expression is the whole method chain up to and …\nIf true, the diagnostics is an <code>unsafe_op_in_unsafe_fn</code> lint …\nSearch for the name in the associated items only.\nThree possible ways to search for the name in associated …\nImport map entry should strictly match the query string.\nSearch for the name in other items only.\nImport map entry should contain all letters from the query …\nItem import details stored in the <code>ImportMap</code>.\nA map from publicly exported items to its name.\nSearch for the name in both associated and other items.\nImport map entry should match the query string by prefix.\nA way to match import map contents against the search …\nSpecifies whether we want to include associated items in …\nRespect casing of the query string when matching.\nThe module containing this item.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuzzy finds items instead of exact matching.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this item is annotated with <code>#[doc(hidden)]</code>.\nWhether this item is annotated with <code>#[unstable(..)]</code>.\nA name that can be used to import the item, relative to …\nSearches dependencies of <code>krate</code> for an importable name …\nIndicates that the landing pad is finished and that the …\nThe <code>+</code> operator (addition)\nCreates an aggregate value, like a tuple or struct.\nThe type is of the element\nEvaluates the operand, which must have type <code>bool</code>. If it is …\nThe <code>&amp;</code> operator (bitwise and)\nThe <code>|</code> operator (bitwise or)\nThe <code>^</code> operator (bitwise xor)\nRoughly speaking, evaluates the <code>func</code> operand and the …\nPerforms essentially all of the casts that can be …\nSame as <code>BinaryOp</code>, but yields <code>(T, bool)</code> with a <code>bool</code> …\nData must be immutable but not aliasable. This kind of …\n?\nConstants are already semantically values, and remain …\nCreates a value by loading the given place.\nA CopyForDeref is equivalent to a read from a place at the …\nIndicates the end of dropping a coroutine.\nComputes the discriminant of the place, returning it as an …\nThe <code>/</code> operator (division)\nThe behavior of this statement differs significantly …\nDrops the place and assigns a new value to it.\nCast into a dyn* object.\nThe <code>==</code> operator (equality)\nA block where control flow only ever takes one real path, …\nA terminator for blocks that only take one path in …\nThe <code>&gt;=</code> operator (greater than or equal to)\nBlock has one successor; we continue execution there.\nThe <code>&gt;</code> operator (greater than)\nSomething that should never happen and is definitely a …\nThese should not occur, usually indicates a bug in mir …\nFIXME: Fold this into InternalError\nThe <code>&lt;=</code> operator (less than or equal to)\nCreates a pointer/reference to the given thread local.\nThe <code>&lt;</code> operator (less than)\nCreates a value by performing loading the place, just like …\nThe <code>*</code> operator (multiplication)\nData is mutable and not aliasable.\nStores spans which implies that the local should be …\nThe <code>!=</code> operator (not equal to)\nThe <code>-</code> operator for negation\nThe <code>!</code> operator for logical inversion\nThe <code>ptr.offset</code> operator\nAn operand in MIR represents a “value” in Rust, the …\nPointer related casts that are done by coercions.\nAn exposing pointer to address cast. A cast between a …\nAn address-to-pointer cast that picks up an exposed …\nAll sorts of pointer-to-pointer casts. Note that …\nCreates a reference of the indicated kind to the place.\nThe <code>%</code> operator (modulus)\nCreates an array where each element is the value of the …\nReturns from the function.\nThe immediately borrowed place must be immutable, but …\nTransmutes a <code>*mut u8</code> into shallow-initialized <code>Box&lt;T&gt;</code>.\nNON STANDARD: allocates memory with the type’s layout, …\nData must be immutable and is aliasable.\nThe <code>&lt;&lt;</code> operator (shift left)\nThe <code>&gt;&gt;</code> operator (shift right)\nNON STANDARD: This kind of operand returns an immutable …\nThe <code>-</code> operator (subtraction)\nSwitches based on the computed value.\nTrying to lower a trait function, instead of an …\nThe type is of the tuple\nThis borrow arose from method-call auto-ref (i.e., …\nThis should never happen. Type mismatch should catch …\nComputes a value as described by the operation. Exactly …\nMeans that code had undefined behavior. We don’t try to …\nIndicates a terminator that can never be reached.\nIndicates that the landing pad is finished and that the …\nYields the operand unchanged\nMarks a suspend point.\nReturns a slice with all possible jump targets (including …\nThis field stores the closures directly owned by this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf true, this block lies on an unwind path. This is used …\nReturns an iterator over the switch targets.\nCreates switch targets from an iterator of values and …\nReturns the fallback target that is jumped to when none of …\nList of statements in this block.\nBuilds a switch targets definition that jumps to <code>then</code> if …\nFinds the <code>BasicBlock</code> to which this <code>SwitchInt</code> will branch …\nTerminator for this block.\nArguments the function is called with. These are owned by …\nCleanups to be done if the call unwinds.\nWhere the returned value will be written\nThe discriminant value being tested.\nCleanup to be done if the coroutine is dropped at this …\n<code>true</code> if this is from a call in HIR rather than from an …\nThe function that’s being called.\nA block control flow could conceptually jump to, but won’…\nThe target normal control flow will take.\nThe target normal control flow will take.\nWhere to resume to.\nThe place to store the resume argument in.\nWhere to go after this call returns. If none, the call …\nThe imaginary cleanup block link. This particular path …\nThe value to return.\nThe actual data that is stored in the index. It should be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe file id for both the <code>ptr</code> and <code>name_ptr</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this symbol is a doc alias for the original symbol.\nThis points to the <code>syntax::ast::Name</code> identifier of the …\nThis points to the whole syntax node of the declaration.\nConstant\nConstant generic parameter\nType tree shows how can we get from set of types to some …\nWell known type (such as <code>true</code> for bool)\nStruct field access\nFunction call (does not take self param)\nLocal variable\nIndicates possibility of many different options that all …\nMethod call (has self param)\nPassing type as reference (with <code>&amp;</code>)\nStatic variable\nStruct construction\nConfiguration options for the term search\nContext for the <code>term_search</code> function\nTuple construction\nEnum variant construction\nConfiguration for term search\nEnable borrow checking, this guarantees the outputs of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuel for term search in “units of work”\nGenerate source code for type tree.\nTarget / expected output type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper function to check if outermost type tree is …\nIndicate when to squash multiple trees to <code>Many</code> as there …\nSemantic scope, captures context for the term search\nSemantics for the program\nTerm search\nList the traits used in type tree\nGet type of the type tree.\nThe token cannot join with the following token to form a …\nThe token can join with the following token to form a …\nThe token can join with the following token to form a …\nIndicates whether a token can join with the following …\nThe anchor this span is relative to.\nThe syntax context of the span.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe text range of this span, relative to the anchor. We …")