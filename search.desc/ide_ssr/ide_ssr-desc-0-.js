searchState.loadedDescShard("ide_ssr", 0, "Structural Search Replace\nInformation about a match that was found.\nSearches a crate for pattern matches and possibly replaces …\nAdds a rule to be applied. The order in which rules are …\nAdds a search pattern. For use if you intend to only call …\nConstructs an instance using the start of the first file …\nFinds all nodes in <code>file_id</code> whose text is exactly equal to …\nFinds matches for all added rules and returns edits for …\nReturns <code>self</code> with any nested matches removed and made into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new instance where names will be looked up as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns matches for all added rules.\nAttempts to build an SSR MatchFinder from a comment at the …")